#include <iostream>

struct Fractions
{
	int numerator{};
	int denominator{};
	int maior{};

};


int GetBigger(Fractions a)
{
	int maior{a.numerator};

	if(a.numerator < a.denominator)
	{
		maior = a.denominator;
	}

	return maior;
}


Fractions Get(Fractions b)
{
	Fractions d = b;
	for(int i = 1; i <= b.maior; i++)
	{
		
		if ((b.numerator % i == 0) and (b.denominator % i == 0))
		{
			b.numerator   = b.numerator / i;
			b.denominator = b.denominator / i;
		};
	}
	d.numerator   = b.numerator;
	d.denominator = b.denominator;
	return d;
}


int main()
{
	int numerador;
	int denominador;

	while(true)
	{
		std::cin >> numerador;
		std::cin >> denominador;
		if(denominador != 0)
			break;
		std::cout << "Por favor, escolha um denominador diferente de 0." << std::endl;
	}


	Fractions data;
	data.numerator = numerador;
	data.denominator = denominador;
	data.maior = GetBigger(data);
	
	Fractions collecteddata;
	collecteddata = Get(data);
	
	if(collecteddata.denominator == 1)
		std::cout << collecteddata.numerator << std::endl;
	else
	{
		std::cout << collecteddata.numerator << "/" << collecteddata.denominator << std::endl;
	}
	
	return 0;
}
